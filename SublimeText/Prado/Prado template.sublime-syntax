%YAML 1.2
---
name: Prado template
file_extensions: [tpl, page]
scope: source.prado
contexts:
  main:
    - match: ""
      push: "Packages/HTML/HTML.sublime-syntax"
      with_prototype:
        - include: prado-entities
        - include: prado-inline-tags

  prado-entities:
# Comments
    - match: <!---
      scope: punctuation.definition.comment.prado
      push:
        - meta_scope: comment.block.prado
        - match: '---\s*>'
          pop: true
        - match: "---"
          scope: invalid.illegal.bad-comments-or-CDATA.prado
    - match: <%@
      scope: punctuation.definition.templateproperty.begin.prado
      push:
        - meta_scope: meta.tag.templateproperty.prado
        - match: '%>'
          pop: true
          scope: punctuation.definition.templateproperty.end.prado
        - include: prado-component-attr-generic
    - match: <%include
      scope: punctuation.definition.templateinclude.begin.prado
      push:
        - meta_scope: meta.tag.templateinclude.prado
        - meta_content_scope: meta.tag.templateinclude-value.prado
        - match: '%>'
          pop: true
          scope: punctuation.definition.templateinclude.end.prado
# TClientScript
    - match: '(<)(com:)(TClientScript)\b(?![^>]*/>)'
      captures:
        0: meta.tag.component.clientscript.begin.prado
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.prefix.prado
        3: entity.name.tag.clientscript.prado
      push:
        - match: '(</)(com:)(TClientScript)(>)'
          captures:
            0: meta.tag.component.clientscript.end.prado
            1: punctuation.definition.tag.begin.html
            2: entity.name.tag.prefix.prado
            3: entity.name.tag.clientscript.prado
            4: punctuation.definition.tag.end.html
          pop: true
        - match: '>'
          scope: meta.tag.component.clientscript.begin.prado punctuation.definition.tag.end.html
          push:
            - meta_content_scope: source.js.embedded.html
            - include: 'scope:source.js'
          with_prototype:
             - match: (?=</com:TClientScript)
               pop: true
        - match: ''
          push:
            - meta_scope: meta.tag.component.clientscript.begin.prado
            - match: '(?=>)'
              pop: true
            - include: prado-component-stuff
# TStyleSheet
    - match: '(<)(com:)(TStyleSheet)\b(?![^>]*/>)'
      captures:
        0: meta.tag.component.stylesheet.begin.prado
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.prefix.prado
        3: entity.name.tag.stylesheet.prado
      push:
        - match: '(</)(com:)(TStyleSheet)(>)'
          captures:
            0: meta.tag.component.stylesheet.end.prado
            1: punctuation.definition.tag.begin.html
            2: entity.name.tag.prefix.prado
            3: entity.name.tag.stylesheet.prado
            4: punctuation.definition.tag.end.html
          pop: true
        - match: '>'
          scope: meta.tag.component.stylesheet.begin.prado punctuation.definition.tag.end.html
          embed: scope:source.css
          embed_scope: source.css.embedded.html
          escape: (?=</com:TStyleSheet)
        - match: ''
          push:
            - meta_scope: meta.tag.component.stylesheet.begin.prado
            - match: '(?=>)'
              pop: true
            - include: prado-component-stuff
# Generic components
    - match: '(<)(com:|prop:)([a-zA-z0-9.]+)\b(?![^>]*/>)'
      captures:
        0: meta.tag.component.generic.begin.prado
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.prefix.prado
        3: entity.name.tag.generic.prado
      push:
        - match: '(</)(com:)([a-zA-z0-9\.]+)(>)'
          captures:
            0: meta.tag.component.generic.end.prado
            1: punctuation.definition.tag.begin.html
            2: entity.name.tag.prefix.prado
            3: entity.name.tag.generic.prado
            4: punctuation.definition.tag.end.html
          pop: true
        - match: '>'
          scope: meta.tag.component.generic.begin.prado punctuation.definition.tag.end.html
          pop: true
        - match: ''
          push:
            - meta_scope: meta.tag.component.generic.begin.prado
            - match: '(?=>)'
              pop: true
            - include: prado-component-stuff
    - match: (<)(com:)([a-zA-z0-9.]+)\b
      captures:
        0: meta.tag.component.generic.begin.prado
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.prefix.prado
        3: entity.name.tag.inline.generic.prado
      push:
        - meta_scope: meta.tag.inline.generic.prado
        - match: '(?: ?/)?>'
          scope: punctuation.definition.tag.end.html
          pop: true
        - include: prado-component-stuff
# Component attributes
  prado-component-attr-generic:
    - match: '(?:^|\s+)(([a-zA-Z0-9:\-_.]+)\s*(=)\s*)'
      captures:
        1: meta.attribute-with-value.html
        2: entity.other.attribute-name.html
        3: punctuation.separator.key-value.html
      push:
        - match: '"'
          scope: punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.html string.quoted.double.html
            - match: '"'
              scope: punctuation.definition.string.end.html
              pop: true
            - include: prado-inline-tags
        - match: "'"
          scope: punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.html string.quoted.single.html
            - match: "'"
              scope: punctuation.definition.string.end.html
              pop: true
            - include: prado-inline-tags
        - match: '(?:[^\s<>/''"]|/(?!>))+'
          scope: meta.attribute-with-value.html string.unquoted.html
        - match: ''
          pop: true
    - match: '\s+([a-zA-Z0-9:\-_.]+)'
      captures:
        1: entity.other.attribute-name.html

  prado-component-attr-dataformatstring:
    - match: '(?:^|\s+)\b((DataFormatString)\b\s*(=)\s*)'
      captures:
        1: meta.attribute-with-value.style.html
        2: entity.other.attribute-name.style.html
        3: punctuation.separator.key-value.html
      push:
        - match: '"#'
          scope: string.quoted.double punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.style.html
            - meta_content_scope: source.php
            - match: '"'
              scope: string.quoted.double punctuation.definition.string.end.html
              pop: true
            - match: ''
              embed: scope:source.php
              embed_scope: source.php.embedded.html
              escape: '(?=")'
        - match: "'#"
          scope: string.quoted.single punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.style.html
            - meta_content_scope: source.php
            - match: "'"
              scope: string.quoted.single punctuation.definition.string.end.html
              pop: true
            - match: ''
              embed: scope:source.php
              embed_scope: source.php.embedded.html
              escape: "(?=')"
        - match: '"'
          scope: string.quoted.double punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.style.html
            - meta_content_scope: string.quoted.double
            - match: '"'
              scope: string.quoted.double punctuation.definition.string.end.html
              pop: true
        - match: "'"
          scope: string.quoted.single punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.style.html
            - meta_content_scope: string.quoted.single
            - match: "'"
              scope: string.quoted.single punctuation.definition.string.end.html
              pop: true

  prado-component-attr-style:
    - match: '(?:^|\s+)\b((Style)\b\s*(=)\s*)'
      captures:
        1: meta.attribute-with-value.style.html
        2: entity.other.attribute-name.style.html
        3: punctuation.separator.key-value.html
      push:
        - match: '"'
          scope: string.quoted.double punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.style.html
            - meta_content_scope: source.css
            - match: '"'
              scope: string.quoted.double punctuation.definition.string.end.html
              pop: true
            - match: ''
              # An anonymous context with an include is used here rather than
              # a direct push, so that if the target context isn't found it's
              # only a warning rather than an error. This will likely happen
              # if the user has replaced the default CSS syntax
              push:
                - include: 'CSS.sublime-syntax#rule-list-body'
              with_prototype:
                - match: '(?=")'
                  pop: true
                - include: attribute-entities
        - match: "'"
          scope: string.quoted.single punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.style.html
            - meta_content_scope: source.css
            - match: "'"
              scope: string.quoted.single punctuation.definition.string.end.html
              pop: true
            - match: ''
              # An anonymous context with an include is used here rather than
              # a direct push, so that if the target context isn't found it's
              # only a warning rather than an error. This will likely happen
              # if the user has replaced the default CSS syntax
              push:
                - include: 'CSS.sublime-syntax#rule-list-body'
              with_prototype:
                - match: "(?=')"
                  pop: true
                - include: attribute-entities
        - match: ''
          pop: true

  prado-component-attr-jsevent:
    - match: |-
        (?x)\s*\b(Attributes\.)((
        onabort|onautocomplete|onautocompleteerror|onblur|oncancel|oncanplay|
        oncanplaythrough|onchange|onclick|onclose|oncontextmenu|oncuechange|
        ondblclick|ondrag|ondragend|ondragenter|ondragexit|ondragleave|ondragover|
        ondragstart|ondrop|ondurationchange|onemptied|onended|onerror|onfocus|
        oninput|oninvalid|onkeydown|onkeypress|onkeyup|onload|onloadeddata|
        onloadedmetadata|onloadstart|onmousedown|onmouseenter|onmouseleave|
        onmousemove|onmouseout|onmouseover|onmouseup|onmousewheel|onpause|onplay|
        onplaying|onprogress|onratechange|onreset|onresize|onscroll|onseeked|
        onseeking|onselect|onshow|onsort|onstalled|onsubmit|onsuspend|
        ontimeupdate|ontoggle|onvolumechange|onwaiting)\b\s*(=)\s*)
      captures:
        1: meta.attribute-with-value.event.html
        2: entity.other.attribute-name.event.html
        3: punctuation.separator.key-value.html
      push:
        - match: '"'
          scope: string.quoted.double punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.event.html
            - match: '"'
              scope: string.quoted.double punctuation.definition.string.end.html
              pop: true
            - match: ''
              embed: scope:source.js
              embed_scope: source.js.embedded.html
              escape: '(?=")'
        - match: "'"
          scope: string.quoted.single punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.event.html
            - match: "'"
              scope: string.quoted.single punctuation.definition.string.end.html
              pop: true
            - match: ''
              embed: scope:source.js
              embed_scope: source.js.embedded.html
              escape: '(?=")'
        - match: ''
          pop: true

  prado-component-stuff:
    - include: prado-component-attr-style
    - include: prado-component-attr-jsevent
    - include: prado-component-attr-dataformatstring
    - include: prado-component-attr-generic
    - include: prado-component-prop
# Inline tags

  prado-tag-embeddedphp:
    - match: <%(#|=|%)
      scope: punctuation.definition.embedded.begin.prado
      push:
        - meta_scope: meta.tag.embedded.prado
        - match: '%>'
          pop: true
          scope: punctuation.definition.embedded.end.prado
        - match: ''
          scope: source.prado.embedded.databind
          embed: scope:source.php
          embed_scope: source.php.embedded.html
          escape: (?=%>)

  prado-tag-templatetag:
    - match: <%(\$|~|/)
      scope: punctuation.definition.templatetag.begin.prado
      push:
        - meta_scope: meta.tag.templatetag.prado
        - meta_content_scope: meta.tag.templatetag-value.prado
        - match: '%>'
          pop: true
          scope: punctuation.definition.templatetag.end.prado

  prado-tag-localizationtag:
    - match: <%\[
      scope: punctuation.definition.localizationtag.begin.prado
      push:
        - meta_scope: meta.tag.localizationtag.prado
        - meta_content_scope: meta.tag.localizationtag-value.prado
        - match: '\]%>'
          pop: true
          scope: punctuation.definition.localizationtag.end.prado

  prado-inline-tags:
    - include: prado-tag-embeddedphp
    - include: prado-tag-templatetag
    - include: prado-tag-localizationtag
